---
- name: check kubeadm
  stat:
    path: /etc/kubernetes/pki/ca.crt
  register: kubeadm_check

- name: kubeadm init
  command: kubeadm init --pod-network-cidr 10.1.0.0/16
  when: not kubeadm_check.stat.exists
  notify:
    - reboot

- name: k8s dir
  file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: k8s conf
  copy:
    src: /etc/kubernetes/admin.conf
    remote_src: yes
    dest: /home/{{ ansible_user }}/.kube/config
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: download k8s yml
  get_url:
    url: "{{ item.url }}"
    dest: "/tmp/{{ item.name }}.yml"
  loop: "{{ k8s_deployments_yml }}"

- name: install kubernetes python package
  pip:
    name: kubernetes

- name: deploy networking & ingress controller
  k8s:
    src: "/tmp/{{ item.name }}.yml"
  loop: "{{ k8s_deployments_yml }}"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  notify:
    - reboot

- name: get ingress controller info
  k8s_info:
    kind: service
    namespace: haproxy-controller
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: ingress_controller_info

- name: save ingress controller info
  delegate_to: localhost
  copy:
    content: "{{ ingress_controller_info | to_nice_yaml }}"
    dest: "{{ ingress_controller_info_path }}"

- name: enable ingress controller port
  include_tasks: 1-1-enable_ingress_controller_port.yml
  when: false

- name: check join command
  delegate_to: localhost
  stat:
    path: "{{ join_tmp_path }}"
  register: join_check

- name: get join
  command: kubeadm token create --print-join-command
  when: not join_check.stat.exists
  register: join_command

- name: copy join
  delegate_to: localhost
  copy:
    content: "{{ join_command.stdout }}"
    dest: "{{ join_tmp_path }}"
  when: not join_check.stat.exists
